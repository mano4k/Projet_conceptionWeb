import { isValidCountryIso } from './helpers';
import { Capital, Country } from './interfaces';
/**
 * @func findCapitalOfCountryIso Find the capital of a country by its
 * country ISO 3166-1 alpha-2 or alpha-3 code.
 *
 * @param  {string}  code  Country ISO code (case insensitive)
 * @return {Capital|undefined}
 */
export declare const findCapitalOfCountryIso: (code: string) => Capital | undefined;
/**
 * @func findCapitalOfCountryName Find the capital of a country by its name.
 *
 * @param  {string}  name  Country name (case insensitive)
 * @return {Capital|undefined}
 */
export declare const findCapitalOfCountryName: (name: string) => Capital | undefined;
/**
 * @func findCountryByCapitalName Find a country by its capital name.
 *
 * @param  {string}  name  Capital name (case insensitive, utf-8 or ascii)
 * @return {Country|undefined}
 */
export declare const findCountryByCapitalName: (name: string) => Country | undefined;
/**
 * @func findCountryByIso Find a country by its country ISO 3166-1 alpha-2 or alpha-3 code.
 *
 * @param  {string}  code  Country ISO code (case insensitive)
 * @return {Country|undefined}
 */
export declare const findCountryByIso: (code: string) => Country | undefined;
/**
 * @func findCountryByName Find a country by its name.
 *
 * @param  {string}  name  Country name (case insensitive)
 * @return {Country|undefined}
 */
export declare const findCountryByName: (name: string) => Country | undefined;
/**
 * @func getCapitals Get all country capitals.
 *
 * @return  {Capital[]}
 */
export declare const getCapitals: () => Capital[];
/**
 * @func getCountries Get all countries.
 *
 * @return  {Country[]}
 */
export declare const getCountries: () => Country[];
/**
 * @func getCountryIso2CodeByIso3 Get the country ISO 3166-1 alpha-2 code
 * related to an alpha-3 code.
 *
 * @param  {string}  iso3  Country ISO 3166-1 alpha-3 code (case insensitive)
 * @return {string|undefined}
 */
export declare const getCountryIso2CodeByIso3: (iso3: string) => string | undefined;
/**
 * @func getCountryIso2Codes Get all country ISO 3166-1 alpha-2 codes.
 *
 * @return  {string[]}
 */
export declare const getCountryIso2Codes: () => string[];
/**
 * @func getCountryIso3CodeByIso2 Get the country ISO 3166-1 alpha-2 code
 * related to an alpha-3 code.
 *
 * @param  {string}  iso2  Country ISO 3166-1 alpha-2 code (case insensitive)
 * @return {string|undefined}
 */
export declare const getCountryIso3CodeByIso2: (iso2: string) => string | undefined;
/**
 * @func getCountryIso3Codes Get all country ISO 3166-1 alpha-3 codes.
 *
 * @return  {string[]}
 */
export declare const getCountryIso3Codes: () => string[];
export { isValidCountryIso };
